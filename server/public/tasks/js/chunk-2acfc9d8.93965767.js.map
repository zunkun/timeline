{"version":3,"sources":["webpack:///./src/views/Project.vue?1daf","webpack:///src/views/Project.vue","webpack:///./src/views/Project.vue?1e80","webpack:///./src/views/Project.vue?e1f5","webpack:///./src/views/Project.vue?3e14","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","separator-class","to","name","_v","params","project","_s","staticClass","group","on","change","model","value","callback","$$v","$set","expression","_l","progress","key","slot","click","$event","newTask","staticStyle","color","nativeOn","editProgress","deleteProgress","changeTask","tasks","task","title","editTask","deleteTask","description","newProgress","visible","progressShow","width","update:visible","ref","rules","progressRules","label-width","label-position","label","prop","type","rows","placeholder","plain","size","saveProgress","progressName","taskShow","taskRules","saveTask","staticRenderFns","Projectvue_type_script_lang_js_","components","Header","draggable","vuedraggable_umd_min_default","a","data","baseUrl","projectId","sequence","required","message","trigger","min","max","pattern","methods","getProject","_getProject","Object","asyncToGenerator","regeneratorRuntime","mark","_callee2","url","_this","wrap","_context2","prev","next","concat","fetch","then","_ref","_callee","res","_context","ok","abrupt","json","sent","stop","_x","apply","arguments","changeProgress","progresses","length","index","method","body","stringify_default","progressId","headers","content-type","event","moved","oldIndex","newIndex","bigIndex","smallIndex","_this2","_this3","$refs","progressForm","validate","valid","_this4","_this5","taskForm","moveTask","element","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","done","err","return","_task","created","_created","_callee3","_context3","$route","views_Projectvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Project_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Project_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","module","exports","anObject","get","getIterator","it","iterFn","TypeError","call","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","match","e"],"mappings":"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","file":"js/chunk-2acfc9d8.93965767.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"project\"}},[_c('Header',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ name: 'projects' }}},[_vm._v(\"项目\")]),_c('el-breadcrumb-item',{attrs:{\"to\":{name: 'project', params: {id: _vm.project.id}}}},[_vm._v(_vm._s(_vm.project.name))]),_c('el-breadcrumb-item',[_vm._v(\"模块\")])],1)],1),_c('div',{staticClass:\"progress-wrapper\"},[_c('draggable',{attrs:{\"group\":\"progresses\"},on:{\"change\":_vm.change},model:{value:(_vm.project.progresses),callback:function ($$v) {_vm.$set(_vm.project, \"progresses\", $$v)},expression:\"project.progresses\"}},_vm._l((_vm.project.progresses),function(progress){return _c('el-card',{key:progress.id,staticClass:\"progress-lists progress-card\"},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',{staticClass:\"p-name\"},[_vm._v(_vm._s(progress.name))]),_c('div',{staticClass:\"p-menu\"},[_c('i',{staticClass:\"el-icon-plus\",on:{\"click\":function($event){return _vm.newTask(progress)}}}),_c('el-dropdown',[_c('span',{staticClass:\"el-dropdown-link\"},[_c('i',{staticClass:\"el-icon-more\",staticStyle:{\"color\":\"#67C23A\"}})]),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{staticStyle:{\"color\":\"#E6A23C\"},nativeOn:{\"click\":function($event){return _vm.editProgress(progress)}}},[_vm._v(\"编辑\")]),_c('el-dropdown-item',{staticStyle:{\"color\":\"#F56C6C\"},nativeOn:{\"click\":function($event){return _vm.deleteProgress(progress)}}},[_vm._v(\"删除\")])],1)],1)],1)]),_c('draggable',{staticClass:\"task-lists-zone\",attrs:{\"group\":\"tasks\"},on:{\"change\":function($event){return _vm.changeTask(progress.id, progress.tasks)}},model:{value:(progress.tasks),callback:function ($$v) {_vm.$set(progress, \"tasks\", $$v)},expression:\"progress.tasks\"}},_vm._l((progress.tasks),function(task){return _c('div',{key:'task-'+task.id,staticClass:\"task-lists\"},[_c('div',{staticClass:\"task-lists-title\"},[_c('div',{staticClass:\"title-left\"},[_vm._v(\"\\n                \"+_vm._s(task.title)+\" \"+_vm._s(task.id)+\"\\n              \")]),_c('div',{staticClass:\"title-right\"},[_c('el-dropdown',[_c('span',{staticClass:\"el-dropdown-link\"},[_c('i',{staticClass:\"el-icon-more\"})]),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.editTask(progress, task)}}},[_vm._v(\"编辑\")]),_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.deleteTask(task)}}},[_vm._v(\"删除\")])],1)],1)],1)]),_c('div',{staticClass:\"task-lists-des\"},[_vm._v(\"\\n              \"+_vm._s(task.description)+\"\\n            \")])])}),0)],1)}),1),_c('el-card',{staticClass:\"progress-lists progress-add\",nativeOn:{\"click\":function($event){return _vm.newProgress($event)}}},[_c('div',{staticClass:\"p-add\"},[_c('i',{staticClass:\"el-icon-plus\"}),_vm._v(\"新增模块\")])])],1),_c('el-dialog',{attrs:{\"title\":\"项目过程编辑\",\"visible\":_vm.progressShow,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.progressShow=$event}}},[_c('el-form',{ref:\"progressForm\",attrs:{\"model\":_vm.progress,\"rules\":_vm.progressRules,\"label-width\":\"80px\",\"label-position\":\"right\"}},[_c('el-form-item',{attrs:{\"label\":\"过程\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.progress.name),callback:function ($$v) {_vm.$set(_vm.progress, \"name\", $$v)},expression:\"progress.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"说明\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.progress.description),callback:function ($$v) {_vm.$set(_vm.progress, \"description\", $$v)},expression:\"progress.description\"}})],1),_c('el-form-item',{attrs:{\"label\":\"颜色\",\"prop\":\"color\"}},[_c('el-input',{staticClass:\"color-i\",attrs:{\"placeholder\":\"输入颜色\"},model:{value:(_vm.progress.color),callback:function ($$v) {_vm.$set(_vm.progress, \"color\", $$v)},expression:\"progress.color\"}},[_c('template',{slot:\"append\"},[_c('el-color-picker',{staticClass:\"color-p\",model:{value:(_vm.progress.color),callback:function ($$v) {_vm.$set(_vm.progress, \"color\", $$v)},expression:\"progress.color\"}})],1)],2)],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"plain\":\"\",\"size\":\"small\"},on:{\"click\":function($event){_vm.progressShow = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"success\",\"plain\":\"\",\"size\":\"small\"},on:{\"click\":_vm.saveProgress}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.task.progressName + '|' + (_vm.task.title ||'任务编辑'),\"visible\":_vm.taskShow,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.taskShow=$event}}},[_c('el-form',{ref:\"taskForm\",attrs:{\"model\":_vm.task,\"rules\":_vm.taskRules,\"label-width\":\"80px\",\"label-position\":\"right\"}},[_c('el-form-item',{attrs:{\"label\":\"主题\",\"prop\":\"title\"}},[_c('el-input',{model:{value:(_vm.task.title),callback:function ($$v) {_vm.$set(_vm.task, \"title\", $$v)},expression:\"task.title\"}})],1),_c('el-form-item',{attrs:{\"label\":\"说明\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.task.description),callback:function ($$v) {_vm.$set(_vm.task, \"description\", $$v)},expression:\"task.description\"}})],1),_c('el-form-item',{attrs:{\"label\":\"颜色\",\"prop\":\"color\"}},[_c('el-input',{staticClass:\"color-i\",attrs:{\"placeholder\":\"输入颜色\"},model:{value:(_vm.task.color),callback:function ($$v) {_vm.$set(_vm.task, \"color\", $$v)},expression:\"task.color\"}},[_c('template',{slot:\"append\"},[_c('el-color-picker',{staticClass:\"color-p\",model:{value:(_vm.task.color),callback:function ($$v) {_vm.$set(_vm.task, \"color\", $$v)},expression:\"task.color\"}})],1)],2)],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"plain\":\"\",\"size\":\"small\"},on:{\"click\":function($event){_vm.taskShow = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"success\",\"plain\":\"\",\"size\":\"small\"},on:{\"click\":_vm.saveTask}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"project\">\n    <Header>\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ name: 'projects' }\">项目</el-breadcrumb-item>\n        <el-breadcrumb-item :to=\"{name: 'project', params: {id: project.id}}\">{{project.name}}</el-breadcrumb-item>\n        <el-breadcrumb-item>模块</el-breadcrumb-item>\n      </el-breadcrumb>\n    </Header>\n    <div class=\"progress-wrapper\">\n      <draggable v-model=\"project.progresses\" group=\"progresses\"  @change=\"change\">\n        <el-card v-for=\"progress of project.progresses\" :key=\"progress.id\" class=\"progress-lists progress-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <div class=\"p-name\">{{progress.name}}</div>\n            <div class=\"p-menu\">\n              <i class=\"el-icon-plus\" @click=\"newTask(progress)\"></i>\n              <el-dropdown>\n                <span class=\"el-dropdown-link\">\n                  <i class=\"el-icon-more\" style=\"color:#67C23A;\"></i>\n                </span>\n                <el-dropdown-menu slot=\"dropdown\">\n                  <el-dropdown-item @click.native=\"editProgress(progress)\" style=\"color:#E6A23C;\">编辑</el-dropdown-item>\n                  <el-dropdown-item @click.native=\"deleteProgress(progress)\" style=\"color:#F56C6C;\">删除</el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </div>\n          </div>\n          <draggable v-model=\"progress.tasks\" group=\"tasks\" class=\"task-lists-zone\"\n            @change=\"changeTask(progress.id, progress.tasks)\">\n            <div class=\"task-lists\" v-for=\"task in progress.tasks\" :key=\"'task-'+task.id\">\n              <div class=\"task-lists-title\">\n                <div class=\"title-left\">\n                  {{task.title}} {{task.id}}\n                </div>\n                <div class=\"title-right\">\n                  <el-dropdown>\n                    <span class=\"el-dropdown-link\">\n                      <i class=\"el-icon-more\"></i>\n                    </span>\n                    <el-dropdown-menu slot=\"dropdown\">\n                      <el-dropdown-item @click.native=\"editTask(progress, task)\">编辑</el-dropdown-item>\n                      <el-dropdown-item @click.native=\"deleteTask(task)\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </el-dropdown>\n                </div>\n              </div>\n              <div class=\"task-lists-des\">\n                {{task.description}}\n              </div>\n            </div>\n          </draggable>\n        </el-card>\n      </draggable>\n      <el-card class=\"progress-lists progress-add\" @click.native=\"newProgress\">\n        <div class=\"p-add\"> <i class=\"el-icon-plus\"></i>新增模块</div>\n      </el-card>\n    </div>\n    <el-dialog title=\"项目过程编辑\" :visible.sync=\"progressShow\" width=\"50%\">\n      <el-form ref=\"progressForm\" :model=\"progress\" :rules=\"progressRules\" label-width=\"80px\" label-position=\"right\">\n        <el-form-item label=\"过程\" prop=\"name\">\n          <el-input v-model=\"progress.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"说明\">\n          <el-input type=\"textarea\" :rows=\"3\" v-model=\"progress.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"颜色\" prop=\"color\">\n          <el-input placeholder=\"输入颜色\" v-model=\"progress.color\" class=\"color-i\">\n            <template slot=\"append\">\n              <el-color-picker v-model=\"progress.color\" class=\"color-p\"></el-color-picker>\n            </template>\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button plain size=\"small\" @click=\"progressShow = false\">取 消</el-button>\n        <el-button type=\"success\" plain size=\"small\" @click=\"saveProgress\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :title=\"task.progressName + '|' + (task.title ||'任务编辑')\" :visible.sync=\"taskShow\" width=\"50%\">\n      <el-form ref=\"taskForm\" :model=\"task\" :rules=\"taskRules\" label-width=\"80px\" label-position=\"right\">\n        <el-form-item label=\"主题\" prop=\"title\">\n          <el-input v-model=\"task.title\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"说明\">\n          <el-input type=\"textarea\" :rows=\"3\" v-model=\"task.description\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"颜色\" prop=\"color\">\n          <el-input placeholder=\"输入颜色\" v-model=\"task.color\" class=\"color-i\">\n            <template slot=\"append\">\n              <el-color-picker v-model=\"task.color\" class=\"color-p\"></el-color-picker>\n            </template>\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button plain size=\"small\" @click=\"taskShow = false\">取 消</el-button>\n        <el-button type=\"success\" plain size=\"small\" @click=\"saveTask\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Header from '../components/Header'\n  import draggable from 'vuedraggable';\n  export default {\n    name: 'Project',\n    components: {\n      Header,\n      draggable\n    },\n    data() {\n      return {\n        baseUrl: '/tasks/api/projects',\n        projectId: '',\n        project: {color: '#67C23A'},\n        task: {\n          title: '',\n          description: '',\n          color: '#67C23A',\n          sequence: '',\n          projectId: ''\n        },\n        progress: {color: '#67C23A'},\n        progressShow: false,\n        progressRules: {\n          name: [{\n              required: true,\n              message: '请输入项目过程名称',\n              trigger: 'blur'\n            },\n            {\n              min: 2,\n              max: 20,\n              message: '长度在 2 到 20 个字符',\n              trigger: 'blur'\n            }\n          ],\n          color: [{\n            required: true,\n            message: '输入颜色',\n            trigger: 'blur'\n          }, {\n            type: 'string',\n            pattern: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n            message: '请输入正确的hex颜色值',\n            trigger: 'blur'\n          }]\n        },\n        taskShow: false,\n        taskRules: {\n          title: [{\n              required: true,\n              message: '请输入任务主题',\n              trigger: 'blur'\n            },\n            {\n              min: 2,\n              max: 20,\n              message: '长度在 2 到 20 个字符',\n              trigger: 'blur'\n            }\n          ],\n          color: [{\n            required: true,\n            message: '输入颜色',\n            trigger: 'blur'\n          }, {\n            type: 'string',\n            pattern: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,\n            message: '请输入正确的hex颜色值',\n            trigger: 'blur'\n          }]\n        },\n      }\n    },\n    methods: {\n      async getProject() {\n        let url = `${this.baseUrl}/${this.projectId}`\n        fetch(url).then(async res => {\n          if (!res.ok) {\n            return;\n          }\n          this.project = await res.json();\n        });\n      },\n      changeProgress() {\n        let progresses = this.project.progresses;\n        if(!progresses || !progresses.length) return;\n        for (let index in progresses) {\n          let progress = progresses[index]\n          fetch(`${this.baseUrl}/${this.projectId}/progress/${progress.id}/moved`, {\n            method: 'POST',\n            body: JSON.stringify({\n              progressId: progress.id,\n              sequence: index,\n            }),\n            headers: {\n              'content-type': 'application/json'\n            },\n          });\n        }\n      },\n      change(event) {\n        let url = `${this.baseUrl}/${this.projectId}/progress`\n\n        if (event.moved) {\n          let moved = event.moved;\n          let oldIndex = moved.oldIndex;\n          let newIndex = moved.newIndex;\n          let bigIndex = oldIndex > newIndex ? oldIndex : newIndex;\n          let smallIndex = oldIndex > newIndex ? newIndex : oldIndex;\n          for (let index = smallIndex; index <= bigIndex; index++) {\n            let progress = this.project.progresses[index];\n            fetch(`${url}/${progress.id}`, {\n              method: 'PUT',\n              body: JSON.stringify({\n                sequence: index,\n              }),\n              headers: {\n                'content-type': 'application/json'\n              },\n            });\n            this.project.progresses[index].sequence = index;\n          }\n        }\n      },\n\n      editProgress(progress) {\n        this.progress = progress;\n        this.progressShow = true;\n      },\n      deleteProgress(progress) {\n          let url = `${this.baseUrl}/${this.project.id}/progress/${progress.id}`;\n          fetch(url, {\n            method: 'DELETE',\n            headers: {\n              'content-type': 'application/json'\n            },\n          }).then((res) => {\n            if (res.ok) {\n              this.getProject()\n            }\n            this.progressShow = false;\n          });\n      },\n      newProgress() {\n        this.progress = {color: '#67C23A'};\n        this.progressShow = true;\n      },\n      saveProgress() {\n        this.$refs.progressForm.validate(valid => {\n          if (!valid) {\n            return;\n          }\n          let method = 'POST';\n          let url = `${this.baseUrl}/${this.project.id}/progress/`;\n          if (this.progress.id) {\n            url = `${url}${this.progress.id}`\n            method = 'PUT';\n          }\n          fetch(url, {\n            method,\n            body: JSON.stringify(this.progress),\n            headers: {\n              'content-type': 'application/json'\n            },\n          }).then((res) => {\n            if (res.ok) {\n              this.getProject()\n            }\n            this.progressShow = false;\n          });\n\n        });\n      },\n\n      newTask(progress) {\n        this.task = {\n          progressId: progress.id,\n          progressName: progress.name,\n          color: '#cf9236',\n          title: '',\n          description: ''\n        };\n        this.taskShow = true;\n      },\n      editTask(progress, task) {\n        task.progressName = progress.name;\n        this.task = task;\n        this.taskShow = true;\n      },\n      deleteTask(task) {\n        let url = `${this.baseUrl}/${this.project.id}/progress/${task.progressId}/tasks/${task.id}`;\n        fetch(url, {\n          method: 'DELETE'\n        }).then(res => {\n          if (res.ok) {\n            this.getProject();\n          }\n        })\n      },\n      saveTask() {\n        this.$refs.taskForm.validate(valid => {\n          if (!valid) {\n            return;\n          }\n          let method = 'POST';\n          let url = `${this.baseUrl}/${this.project.id}/progress/${this.task.progressId}/tasks/`;\n          if (this.task.id) {\n            url = `${url}${this.task.id}`\n            method = 'PUT';\n          }\n          fetch(url, {\n            method,\n            body: JSON.stringify(this.task),\n            headers: {\n              'content-type': 'application/json'\n            },\n          }).then((res) => {\n            if (res.ok) {\n              this.getProject()\n            }\n            this.taskShow = false;\n          });\n\n        });\n      },\n\n      changeTask(progressId, tasks) {\n        for (let index in tasks) {\n          let task = tasks[index];\n          fetch(`${this.baseUrl}/${this.projectId}/progress/${progressId}/tasks/${task.id}/moved`, {\n            method: 'POST',\n            body: JSON.stringify({\n              progressId,\n              sequence: index,\n            }),\n            headers: {\n              'content-type': 'application/json'\n            },\n          });\n        }\n      },\n\n      moveTask(moved) {\n        let oldIndex = moved.oldIndex;\n        let newIndex = moved.newIndex;\n        let bigIndex = oldIndex > newIndex ? oldIndex : newIndex;\n        let smallIndex = oldIndex > newIndex ? newIndex : oldIndex;\n        let task = moved.element;\n        let tasks = [];\n        for (let progress of this.project.progresses) {\n          if (progress.id === task.progressId) {\n            tasks = progress.tasks;\n            break;\n          }\n        }\n        if (!tasks.length) return;\n\n        for (let index = smallIndex; index <= bigIndex; index++) {\n          let _task = tasks[index];\n          fetch(`${this.baseUrl}/${this.projectId}/progress/${task.progressId}/tasks/${_task.id}/moved`, {\n            method: 'POST',\n            body: JSON.stringify({\n              sequence: index,\n            }),\n            headers: {\n              'content-type': 'application/json'\n            },\n          });\n        }\n      }\n    },\n    async created() {\n      this.projectId = this.$route.params.id;\n      await this.getProject();\n    }\n  }\n</script>\n\n<style>\n  #project {\n    margin: 0px;\n  }\n\n  .progress-zpne {\n    padding: 10px 20px;\n  }\n\n  .p-h {\n    border-bottom: solid 1px #CCC;\n    height: 40px;\n  }\n\n  .p-d {\n    padding: 20px;\n  }\n\n  .p-name {\n    float: left;\n  }\n\n  .p-menu {\n    float: right;\n  }\n\n  .clearfix:before,\n  .clearfix:after {\n    display: table;\n    content: \"\";\n  }\n\n  .clearfix:after {\n    clear: both\n  }\n\n  .progress-card {\n    min-height: calc(100vh - 100px);\n  }\n\n  .progress-card el-card__header {\n    padding: 10px;\n  }\n\n  .p-menu {\n    cursor: pointer;\n  }\n\n  .p-menu i {\n    margin-left: 4px;\n  }\n\n  .task-lists {\n    border: 1px solid #ccc;\n    padding-left: 10px;\n    margin: 10px;\n    font-size: 0.8rem;\n    border-radius: 6px;\n    min-height: 80px;\n    cursor: pointer;\n  }\n\n  .task-lists:hover {\n    border: 1px solid green;\n  }\n\n  .task-lists-title {\n    font-size: 1rem;\n    width: 100%;\n    min-height: 30px;\n    margin: 6px 0px;\n  }\n\n  .task-lists-des {\n    margin-top: 10px;\n  }\n\n  .progress-wrapper {\n    display: flex;\n  }\n\n  .progress-lists {\n    min-width: 280px;\n    max-width: 280px;\n    margin: 10px;\n    display: inline-block;\n  }\n\n  .progress-card .el-card__body {\n    padding: 0;\n    height: 90%;\n    overflow: auto;\n  }\n\n  .progress-add {\n    min-width: 280px;\n    max-width: 280px;\n    border:dashed 1px #67C23A;\n    height:100px;\n  }\n\n  .progress-add .el-card__body {\n    vertical-align: middle;\n    margin-left:20px;\n    text-align: left;\n    cursor: pointer;\n  }\n\n  .title-left {\n    width: 90%;\n    float: left;\n  }\n\n  .title-right {\n    width: 10%;\n    float: left;\n  }\n\n  .title-right .el-icon-more {\n    float: right;\n  }\n\n  .title-right .el-dropdown {\n    float: right;\n    margin-right: 6px;\n    color: green;\n    font-size: 1.2rem;\n  }\n\n  .task-lists-zone {\n    height: inherit;\n  }\n\n  .el-color-picker__color {\n    border: 1px;\n  }\n  \n  .el-color-picker__trigger {\n    padding: 0;\n    border: none;\n  }\n  .color-d {\n    height: 24px;\n    cursor: pointer;\n    border-radius: 2px;\n  }\n\n  .el-input-group__append,\n  .el-input-group__prepend {\n    padding: 0;\n    background-color: #fff;\n    border: none;\n  }\n\n  .p-add {\n    margin-top:15px;\n    margin-left:15px;\n    font-size:1.4rem;\n    color: #67C23A\n  }\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Project.vue?vue&type=template&id=0d3351ab&\"\nimport script from \"./Project.vue?vue&type=script&lang=js&\"\nexport * from \"./Project.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Project.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Project.vue?vue&type=style&index=0&lang=css&\"","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","module.exports = require(\"core-js/library/fn/get-iterator\");","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}